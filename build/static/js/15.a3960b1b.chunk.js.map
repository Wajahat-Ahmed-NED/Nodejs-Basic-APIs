{"version":3,"sources":["pages/extra-pages/SendingProfile.js","../node_modules/@mui/icons-material/Edit.js"],"names":["style","position","top","left","transform","width","bgcolor","color","boxShadow","p","overflowX","overflowY","maxHeight","SendingProfile","React","useState","open","setOpen","editModal","setEditModal","editData","setEditData","name","setName","headers","setHeaders","userName","setUserName","password","setPassword","host","setHost","fromAddress","setFromAddress","key","setKey","value","setValue","ignoreError","setIgnoreError","data","setData","handleClose","handleCheckClose","handleSubmit","e","preventDefault","header","handleDelete","i","filter","todo","index","fetchUser","getSendingProfile","then","res","console","log","catch","err","useEffect","title","sx","maxWidth","className","variant","gutterBottom","component","length","onClick","onClose","m","noValidate","autoComplete","id","label","size","onChange","target","class","type","placeholder","required","disabled","htmlFor","map","backgroundColor","Swal","fire","obj","from_address","username","interface_type","ignore_cert_errors","createSendingProfile","icon","text","showConfirmButton","timer","response","message","fullWidth","Date","modified_date","toUTCString","handleEditModal","deleteSendingProfile","handleDeleteGroup","checked","editSendingProfile","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/15.a3960b1b.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Typography, Button, Modal, Box, TextField, Card, CardContent, CardActions, IconButton } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n// project import\r\nimport MainCard from 'components/MainCard';\r\nimport {\r\n    createGroup,\r\n    createPage,\r\n    createSendingProfile,\r\n    createTemplate,\r\n    deleteGroup,\r\n    deleteSendingProfile,\r\n    editSendingProfile,\r\n    getGroups,\r\n    getGroupsSummary,\r\n    getPages,\r\n    getSendingProfile,\r\n    getTemplates\r\n} from 'api/api';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '33%',\r\n    bgcolor: 'rgb(36, 41, 57)',\r\n    color: 'white !important',\r\n\r\n    boxShadow: 24,\r\n    p: 4,\r\n    overflowX: 'hidden',\r\n    overflowY: 'auto',\r\n    // minHeight: \"400px\",\r\n    maxHeight: '600px'\r\n};\r\nexport default function SendingProfile() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [editModal, setEditModal] = React.useState(false);\r\n    const [editData, setEditData] = React.useState(false);\r\n    const [name, setName] = React.useState('');\r\n    const [headers, setHeaders] = useState([]);\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [host, setHost] = useState('');\r\n    const [fromAddress, setFromAddress] = useState('');\r\n    const [key, setKey] = useState('');\r\n    const [value, setValue] = useState('');\r\n    const [ignoreError, setIgnoreError] = useState(false);\r\n    const [position, setPosition] = useState('');\r\n    const [data, setData] = React.useState([]);\r\n    const [groupSummary, setGroupSummary] = React.useState([]);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setEditModal(false);\r\n        setName('');\r\n    };\r\n    const handleCheckClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleAdd = () => {\r\n        setOpen(false);\r\n        if (name === '' || host === '' || fromAddress === '') {\r\n            Swal.fire('Invalid Data', 'Fill all fields!', 'error');\r\n            setOpen(true);\r\n        } else {\r\n            let obj = {\r\n                name: name,\r\n                host: host,\r\n                from_address: fromAddress,\r\n                headers: headers,\r\n                username: userName,\r\n                password: password,\r\n                interface_type: 'SMTP',\r\n                ignore_cert_errors: ignoreError\r\n            };\r\n\r\n            createSendingProfile(obj)\r\n                .then((res) => {\r\n                    console.log(res);\r\n\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Success!',\r\n                        text: 'Profile created successfully!',\r\n                        showConfirmButton: true,\r\n                        timer: 2000\r\n                    });\r\n                    fetchUser();\r\n                    handleClose();\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    handleCheckClose();\r\n                    Swal.fire('Failed', err.response.data.message, 'error');\r\n                });\r\n        }\r\n    };\r\n    const handleEdit = () => {\r\n        setEditModal(false);\r\n        if (name === '' || host === '' || fromAddress === '') {\r\n            Swal.fire('Invalid Data', 'Fill all fields!', 'error');\r\n            setOpen(true);\r\n        } else {\r\n            let obj = {\r\n                ...editData,\r\n                name: name,\r\n                host: host,\r\n                from_address: fromAddress,\r\n                headers: headers,\r\n                username: userName,\r\n                password: password,\r\n                interface_type: 'SMTP',\r\n                ignore_cert_errors: ignoreError\r\n            };\r\n\r\n            editSendingProfile(obj, editData?.id)\r\n                .then((res) => {\r\n                    console.log(res);\r\n\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Success!',\r\n                        text: 'Sending Profile Updated Successfully!',\r\n                        showConfirmButton: true,\r\n                        timer: 2000\r\n                    });\r\n                    fetchUser();\r\n                    handleClose();\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    handleCheckClose();\r\n                    Swal.fire('Failed', err.response.data.message, 'error');\r\n                });\r\n        }\r\n    };\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (key !== '' || value !== '') {\r\n            let header = { key: key, value: value };\r\n\r\n            setHeaders([...headers, header]);\r\n            setKey('');\r\n            setValue('');\r\n            // setEmail('');\r\n            // setPosition('');\r\n        }\r\n    }\r\n    function handleDelete(i) {\r\n        setHeaders(headers.filter((todo, index) => index !== i));\r\n    }\r\n    const fetchUser = () => {\r\n        getSendingProfile()\r\n            .then((res) => {\r\n                console.log(res);\r\n                setData(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const handleDeleteGroup = (i) => {\r\n        deleteSendingProfile(i)\r\n            .then((res) => {\r\n                console.log(res);\r\n\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success!',\r\n                    text: 'Profile deleted successfully!',\r\n                    showConfirmButton: true,\r\n                    timer: 2000\r\n                });\r\n                fetchUser();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                Swal.fire('Failed', err.response.data.message, 'error');\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUser();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(ignoreError);\r\n    }, [ignoreError]);\r\n\r\n    const handleEditModal = (e) => {\r\n        setEditModal(true);\r\n        setName(e?.name);\r\n        setHost(e?.host);\r\n        setFromAddress(e?.from_address);\r\n        setUserName(e?.username);\r\n        setPassword(e?.password);\r\n        setIgnoreError(e?.ignore_cert_errors);\r\n        setHeaders(e?.headers);\r\n        setEditData(e);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <MainCard title=\"Users And Groups\">\r\n                <Card sx={{ maxWidth: 275 }} className=\"mb-3\" style={{ color: 'black' }}>\r\n                    <CardContent>\r\n                        <Typography variant=\"h4\" style={{ color: 'black' }} gutterBottom>\r\n                            Sending Profile\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"div\" color=\"text.secondary\">\r\n                            Total Profiles : {data?.length}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n                <Button variant=\"contained\" className=\"mb-3\" onClick={handleOpen}>\r\n                    New Profile\r\n                </Button>\r\n                {/* <Typography variant=\"h6\" component=\"div\" color=\"text.secondary\">\r\n                    If not created you can do it on gophish admin panel. This issue occurs when browser not able to verify gophish\r\n                    self-signed SSL certificate.\r\n                </Typography> */}\r\n\r\n                <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\r\n                    <Box sx={style}>\r\n                        <Box\r\n                            component=\"form\"\r\n                            sx={{\r\n                                '& > :not(style)': { m: 1, width: '41ch' }\r\n                            }}\r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                Name *\r\n                            </Typography>\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                label=\"Sending Profile Name\"\r\n                                variant=\"outlined\"\r\n                                style={{ color: 'black' }}\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                Host *\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Host\"\r\n                                    id=\"email\"\r\n                                    required\r\n                                    value={host}\r\n                                    onChange={(e) => setHost(e.target.value)}\r\n                                />\r\n                            </div>\r\n\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                From address *\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"From Address\"\r\n                                    id=\"email\"\r\n                                    required\r\n                                    value={fromAddress}\r\n                                    onChange={(e) => setFromAddress(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                Interface Type\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Interface Type\"\r\n                                    id=\"email\"\r\n                                    required\r\n                                    value=\"SMTP\"\r\n                                    disabled\r\n                                />\r\n                            </div>\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                UserName\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Username\"\r\n                                    id=\"email\"\r\n                                    required\r\n                                    value={userName}\r\n                                    onChange={(e) => setUserName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                Password\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Password\"\r\n                                    id=\"email\"\r\n                                    required\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-check\">\r\n                                <input\r\n                                    class=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    id=\"flexCheckChecked\"\r\n                                    value={ignoreError}\r\n                                    onChange={(e) => {\r\n                                        // console.log(ignoreError);\r\n                                        setIgnoreError(!ignoreError);\r\n                                    }}\r\n                                />\r\n                                <label class=\"form-check-label \" htmlFor=\"flexCheckChecked\">\r\n                                    Ignore Certificate Error\r\n                                </label>\r\n                            </div>\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                Email Headers\r\n                            </Typography>\r\n                            <div class=\"container\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm\">\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"X-Custom-Header\"\r\n                                            value={key}\r\n                                            onChange={(e) => setKey(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div class=\"col-sm\">\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"{{.URL}}-gophish\"\r\n                                            value={value}\r\n                                            onChange={(e) => setValue(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div class=\"col-sm\">\r\n                                        <Button variant=\"contained\" color=\"error\" size=\"small\" onClick={handleSubmit}>\r\n                                            Add Header\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <table className=\"table table-hover mt-4\" style={{ color: 'white' }}>\r\n                                <thead class=\"thead-dark\">\r\n                                    <tr>\r\n                                        <td>Headers</td>\r\n\r\n                                        <td>Value</td>\r\n                                        <td>Actions</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {headers?.length > 0 &&\r\n                                        headers?.map((e, i) => {\r\n                                            return (\r\n                                                <tr key={i}>\r\n                                                    <td>{e.key}</td>\r\n\r\n                                                    <td>{e.value}</td>\r\n                                                    <td>\r\n                                                        <DeleteIcon color=\"error\" onClick={() => handleDelete(i)} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                </tbody>\r\n                            </table>\r\n                            {headers?.length < 1 && <p className=\"text-center\">No data available in table</p>}\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                style={{\r\n                                    backgroundColor: '#70d8bd'\r\n                                    // color: \"black\"\r\n                                }}\r\n                                onClick={handleAdd}\r\n                                fullWidth\r\n                            >\r\n                                Create Sending Profile\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Modal>\r\n\r\n                <table className=\"table table-hover mt-4\">\r\n                    <thead class=\"thead-dark\">\r\n                        <tr>\r\n                            <td>Name</td>\r\n\r\n                            <td>Modified Date</td>\r\n                            <td>Actions</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data?.map((e, i) => {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>{e.name}</td>\r\n\r\n                                    <td>{new Date(e.modified_date).toUTCString()}</td>\r\n                                    <td>\r\n                                        <IconButton onClick={() => handleEditModal(e)}>\r\n                                            <EditIcon color=\"success\" />\r\n                                            {/* <DeleteIcon color=\"error\" /> */}\r\n                                        </IconButton>\r\n                                        <IconButton onClick={() => handleDeleteGroup(e?.id)}>\r\n                                            <DeleteIcon color=\"error\" />\r\n                                        </IconButton>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <Modal\r\n                    open={editModal}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"modal-modal-title\"\r\n                    aria-describedby=\"modal-modal-description\"\r\n                >\r\n                    <Box sx={style}>\r\n                        <Box\r\n                            component=\"form\"\r\n                            sx={{\r\n                                '& > :not(style)': { m: 1, width: '41ch' }\r\n                            }}\r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                Name *\r\n                            </Typography>\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                label=\"Sending Profile Name\"\r\n                                variant=\"outlined\"\r\n                                style={{ color: 'black' }}\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                Host *\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Host\"\r\n                                    id=\"email\"\r\n                                    required\r\n                                    value={host}\r\n                                    onChange={(e) => setHost(e.target.value)}\r\n                                />\r\n                            </div>\r\n\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                From address *\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"From Address\"\r\n                                    id=\"email\"\r\n                                    required\r\n                                    value={fromAddress}\r\n                                    onChange={(e) => setFromAddress(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                Interface Type\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Interface Type\"\r\n                                    id=\"email\"\r\n                                    required\r\n                                    value=\"SMTP\"\r\n                                    disabled\r\n                                />\r\n                            </div>\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                UserName\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Username\"\r\n                                    id=\"email\"\r\n                                    required\r\n                                    value={userName}\r\n                                    onChange={(e) => setUserName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                Password\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Password\"\r\n                                    id=\"email\"\r\n                                    required\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-check\">\r\n                                <input\r\n                                    class=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    id=\"flexCheckChecked\"\r\n                                    checked={ignoreError}\r\n                                    onChange={(e) => {\r\n                                        // console.log(ignoreError);\r\n                                        setIgnoreError(!ignoreError);\r\n                                    }}\r\n                                />\r\n                                <label class=\"form-check-label \" htmlFor=\"flexCheckChecked\">\r\n                                    Ignore Certificate Error\r\n                                </label>\r\n                            </div>\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                Email Headers\r\n                            </Typography>\r\n                            <div class=\"container\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm\">\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"X-Custom-Header\"\r\n                                            value={key}\r\n                                            onChange={(e) => setKey(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div class=\"col-sm\">\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"{{.URL}}-gophish\"\r\n                                            value={value}\r\n                                            onChange={(e) => setValue(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div class=\"col-sm\">\r\n                                        <Button variant=\"contained\" color=\"error\" size=\"small\" onClick={handleSubmit}>\r\n                                            Add Header\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <table className=\"table table-hover mt-4\" style={{ color: 'white' }}>\r\n                                <thead class=\"thead-dark\">\r\n                                    <tr>\r\n                                        <td>Headers</td>\r\n\r\n                                        <td>Value</td>\r\n                                        <td>Actions</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {headers?.length > 0 &&\r\n                                        headers?.map((e, i) => {\r\n                                            return (\r\n                                                <tr key={i}>\r\n                                                    <td>{e.key}</td>\r\n\r\n                                                    <td>{e.value}</td>\r\n                                                    <td>\r\n                                                        <DeleteIcon color=\"error\" onClick={() => handleDelete(i)} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                </tbody>\r\n                            </table>\r\n                            {headers?.length < 1 && <p className=\"text-center\">No data available in table</p>}\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                style={{\r\n                                    backgroundColor: '#70d8bd'\r\n                                    // color: \"black\"\r\n                                }}\r\n                                onClick={handleEdit}\r\n                                fullWidth\r\n                            >\r\n                                Update Sending Profile\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Modal>\r\n            </MainCard>\r\n        </>\r\n    );\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;"],"sourceRoot":""}