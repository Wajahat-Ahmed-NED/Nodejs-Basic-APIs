{"version":3,"sources":["pages/extra-pages/CompaignsResult.js"],"names":["newstyle","position","top","left","transform","width","bgcolor","border","boxShadow","p","style","color","overflowX","overflowY","maxHeight","CompaignsResult","React","useState","open","setOpen","testEmailopen","setTestEmailopen","name","setName","emailTemplate","setEmailTemplate","lPage","setLPage","url","setURL","lDate","setLDate","sendEmails","setSendEmails","sendProfile","setSendProfile","group","setGroup","setFname","setLname","setEmail","setPosition","templates","setTemplates","pages","setPages","groups","setGroups","sendingProfile","setSendingProfile","setData","summary","setSummary","result","setResult","newModal","setNewModal","eve","setEvents","console","log","handleClose","id","useParams","fetchUser","getCompaignResult","then","res","data","catch","err","getCompaignSummary","getCompaigns","getTemplates","getPages","getSendingProfile","getGroups","navigate","useNavigate","findLastOccurrence","array","searchValue","i","length","Object","values","includes","useEffect","setTimeout","stats","sent","results","title","variant","className","backgroundColor","onClick","status","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","getCompleteCompaign","deleteCompaign","showConfirmButton","timer","response","message","sx","maxWidth","gutterBottom","component","total","trackColor","size","totalFontSize","tooltipFontSize","roundedCaps","showTotal","items","value","label","opened","clicked","submitted_data","email_reported","onClose","m","noValidate","autoComplete","onChange","e","target","class","type","placeholder","onBlur","disabled","selected","map","required","mt","date","Date","send_by_date","utcDate","getTime","getTimezoneOffset","sendDate","toISOString","obj","template","page","smtp","launch_date","createCompaign","fullWidth","handleNewModal","cursor","first_name","last_name","email","reported","timeline","time","toLocaleString","send_date","details","JSON","parse","payload","rid","browser","address"],"mappings":"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","file":"static/js/19.dc45e54f.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Typography, Button, Modal, Box, TextField, Card, CardContent, CardActions, IconButton } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { Tag } from 'antd';\r\n\r\n// import EditIcon from '@mui/icons-material/Edit';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n// project import\r\nimport { DonutChart } from 'react-circle-chart';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport MainCard from 'components/MainCard';\r\nimport {\r\n    createCompaign,\r\n    createGroup,\r\n    createTemplate,\r\n    deleteCompaign,\r\n    deleteGroup,\r\n    getCompaignResult,\r\n    getCompaigns,\r\n    getGroups,\r\n    getGroupsSummary,\r\n    getPages,\r\n    getSendingProfile,\r\n    getTemplates,\r\n    getCompaignSummary,\r\n    getCompleteCompaign\r\n} from 'api/api';\r\nimport Swal from 'sweetalert2';\r\nimport { useParams } from 'react-router';\r\n\r\nconst newstyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '700px',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4\r\n};\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '33%',\r\n    bgcolor: 'rgb(36, 41, 57)',\r\n    color: 'white !important',\r\n\r\n    boxShadow: 24,\r\n    p: 4,\r\n    overflowX: 'hidden',\r\n    overflowY: 'auto',\r\n    // minHeight: \"400px\",\r\n    maxHeight: '600px'\r\n};\r\nexport default function CompaignsResult() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [testEmailopen, setTestEmailopen] = React.useState(false);\r\n    const [name, setName] = React.useState('');\r\n    const [todos, setTodos] = useState([]);\r\n    const [envelopSender, setEnvelopSender] = useState('');\r\n    const [subject, setSubject] = useState('');\r\n    const [text, setText] = useState('');\r\n    const [emailTemplate, setEmailTemplate] = useState('');\r\n    const [lPage, setLPage] = useState('');\r\n    const [url, setURL] = useState('');\r\n    const [lDate, setLDate] = useState('');\r\n    const [sendEmails, setSendEmails] = useState('');\r\n    const [sendProfile, setSendProfile] = useState('');\r\n    const [group, setGroup] = useState('');\r\n\r\n    const [fname, setFname] = useState('');\r\n    const [lname, setLname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [position, setPosition] = useState('');\r\n    const [templates, setTemplates] = React.useState([]);\r\n    const [pages, setPages] = React.useState([]);\r\n    const [groups, setGroups] = React.useState([]);\r\n    const [sendingProfile, setSendingProfile] = React.useState([]);\r\n    const [data, setData] = React.useState([]);\r\n    const [summary, setSummary] = React.useState({});\r\n    const [result, setResult] = React.useState([]);\r\n    const [newModal, setNewModal] = React.useState(false);\r\n    const [eve, setEvents] = React.useState({});\r\n\r\n    console.log(result);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setName('');\r\n    };\r\n    const handleCheckClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleAdd = () => {\r\n        setOpen(false);\r\n        if (name === '' || emailTemplate === '' || url === '' || lPage === '' || sendProfile === '' || group === '') {\r\n            Swal.fire('Invalid Data', 'Fill all fields!', 'error');\r\n            setOpen(true);\r\n        } else {\r\n            const date = new Date(lDate);\r\n            const send_by_date = new Date(sendEmails);\r\n\r\n            // Convert the date to the UTC time zone\r\n            const utcDate = new Date(date.getTime() + date.getTimezoneOffset() * 60000);\r\n            const sendDate = new Date(send_by_date.getTime() + send_by_date.getTimezoneOffset() * 60000);\r\n            console.log(utcDate.toISOString());\r\n            let obj = {\r\n                name: name,\r\n                template: { name: emailTemplate },\r\n                url: url,\r\n                page: { name: lPage },\r\n                smtp: { name: sendProfile },\r\n                launch_date: utcDate.toISOString(),\r\n                send_by_date: sendDate.toISOString(),\r\n                groups: [{ name: group }]\r\n            };\r\n            console.log(obj);\r\n            createCompaign(obj)\r\n                .then((res) => {\r\n                    console.log(res);\r\n\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Success!',\r\n                        text: 'Compaign created successfully!',\r\n                        showConfirmButton: true,\r\n                        timer: 2000\r\n                    });\r\n                    fetchUser();\r\n                    handleClose();\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    handleCheckClose();\r\n                    Swal.fire('Failed', err.response.data.message, 'error');\r\n                });\r\n        }\r\n    };\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (fname !== '' || lname !== '' || email !== '' || position !== '') {\r\n            let todo = { first_name: fname, last_name: lname, email: email, position: position };\r\n\r\n            setTodos([...todos, todo]);\r\n            setFname('');\r\n            setLname('');\r\n            setEmail('');\r\n            setPosition('');\r\n        }\r\n    }\r\n    function handleDelete(i) {\r\n        setTodos(todos.filter((todo, index) => index !== i));\r\n    }\r\n    const { id } = useParams();\r\n    const fetchUser = () => {\r\n        getCompaignResult(id)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setResult(res.data);\r\n            })\r\n\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n        getCompaignSummary(id)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setSummary(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n        getCompaigns()\r\n            .then((res) => {\r\n                console.log(res);\r\n                setData(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n\r\n        getTemplates()\r\n            .then((res) => {\r\n                console.log(res);\r\n                setTemplates(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n        getPages()\r\n            .then((res) => {\r\n                console.log(res);\r\n                setPages(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n        getSendingProfile()\r\n            .then((res) => {\r\n                console.log(res);\r\n                setSendingProfile(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n        getGroups()\r\n            .then((res) => {\r\n                console.log(res);\r\n                setGroups(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    const handleDeleteGroup = () => {\r\n        deleteCompaign(id)\r\n            .then((res) => {\r\n                console.log(res);\r\n\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success!',\r\n                    text: 'Compaign deleted successfully!',\r\n                    showConfirmButton: true,\r\n                    timer: 2000\r\n                });\r\n                navigate(-1);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                Swal.fire('Failed', err.response.data.message, 'error');\r\n            });\r\n    };\r\n    const handleNewModal = (i) => {\r\n        setNewModal(true);\r\n        setEvents(result?.results[i]);\r\n        console.log(result?.results[i]);\r\n    };\r\n    const navigate = useNavigate();\r\n\r\n    const handleNavigate = (i) => {\r\n        navigate(-1);\r\n    };\r\n    const handleComplete = (i) => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, Complete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                getCompleteCompaign(id)\r\n                    .then((res) => {\r\n                        Swal.fire('Completed!', 'Your Campaign has been Completed.', 'success');\r\n                        console.log(res);\r\n                        navigate(-1);\r\n                    })\r\n                    .catch((err) => {\r\n                        Swal.fire('Failed!', 'Could Not Delete.', 'error');\r\n                    });\r\n            }\r\n        });\r\n    };\r\n\r\n    function findLastOccurrence(array, searchValue) {\r\n        for (let i = array.length - 1; i >= 0; i--) {\r\n            const values = Object.values(array[i]);\r\n            if (values.includes(searchValue)) {\r\n                console.log(array[i]);\r\n                return array[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchUser();\r\n    }, []);\r\n\r\n    setTimeout(() => {\r\n        fetchUser();\r\n    }, 9000000);\r\n\r\n    console.log(summary.stats?.sent);\r\n    console.log(result?.results);\r\n    return (\r\n        <>\r\n            <MainCard title=\"Users And Groups\">\r\n                <div>\r\n                    <Button variant=\"contained\" className=\"me-3 mb-3\" style={{ backgroundColor: 'grey' }} onClick={handleNavigate}>\r\n                        Back\r\n                    </Button>\r\n                    {result?.status !== 'Completed' && (\r\n                        <Button variant=\"contained\" className=\"mx-3 mb-3\" onClick={handleComplete}>\r\n                            Complete\r\n                        </Button>\r\n                    )}\r\n                    <Button variant=\"contained\" className=\"mx-3 mb-3\" onClick={handleDeleteGroup} color=\"error\">\r\n                        Delete\r\n                    </Button>\r\n                </div>\r\n\r\n                <Card sx={{ maxWidth: 275 }} className=\"mb-3\" style={{ color: 'black' }}>\r\n                    <CardContent>\r\n                        <Typography variant=\"h4\" style={{ color: 'black' }} gutterBottom>\r\n                            {result?.name} Compaign Result Summary\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"div\" color=\"text.secondary\">\r\n                            Total Victims : {summary?.stats?.total}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n                {/* <Button variant=\"contained\" className=\"mb-3\" onClick={handleOpen}>\r\n                    New Compaign\r\n                </Button> */}\r\n\r\n                <div className=\"d-flex justify-content-around align-items-center my-5\">\r\n                    <div className=\"d-flex align-items-between\">\r\n                        <h6>Sent</h6>\r\n                        <DonutChart\r\n                            trackColor=\"#cdcdcd\"\r\n                            size=\"130\"\r\n                            totalFontSize=\"16px\"\r\n                            tooltipFontSize=\"16px\"\r\n                            roundedCaps={false}\r\n                            showTotal={false}\r\n                            items={[\r\n                                {\r\n                                    value: `${summary.stats?.sent}`,\r\n                                    label: 'Email Sent'\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex align-items-between\">\r\n                        <h6>Opened</h6>\r\n                        <DonutChart\r\n                            trackColor=\"#cdcdcd\"\r\n                            totalFontSize=\"16px\"\r\n                            tooltipFontSize=\"16px\"\r\n                            size=\"130\"\r\n                            roundedCaps={false}\r\n                            showTotal={false}\r\n                            items={[\r\n                                {\r\n                                    value: `${summary.stats?.opened}`,\r\n                                    label: 'Email Opened'\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-flex align-items-between\">\r\n                        <h6>Clicked</h6>\r\n                        <DonutChart\r\n                            trackColor=\"#cdcdcd\"\r\n                            size=\"130\"\r\n                            totalFontSize=\"16px\"\r\n                            tooltipFontSize=\"16px\"\r\n                            roundedCaps={false}\r\n                            showTotal={false}\r\n                            items={[\r\n                                {\r\n                                    value: `${summary.stats?.clicked}`,\r\n                                    label: 'Clicked Link'\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex align-items-between\">\r\n                        <h6>Submit</h6>\r\n                        <DonutChart\r\n                            trackColor=\"#cdcdcd\"\r\n                            size=\"130\"\r\n                            showTotal={false}\r\n                            totalFontSize=\"16px\"\r\n                            tooltipFontSize=\"16px\"\r\n                            roundedCaps={false}\r\n                            items={[\r\n                                {\r\n                                    value: `${summary.stats?.submitted_data}`,\r\n                                    label: 'Submitted Data'\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex align-items-between\">\r\n                        <h6>Reported</h6>\r\n                        <DonutChart\r\n                            trackColor=\"#cdcdcd\"\r\n                            size=\"130\"\r\n                            showTotal={false}\r\n                            totalFontSize=\"16px\"\r\n                            tooltipFontSize=\"16px\"\r\n                            roundedCaps={false}\r\n                            items={[\r\n                                {\r\n                                    value: `${summary.stats?.email_reported}`,\r\n                                    label: 'Email Reported'\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\r\n                    <Box sx={style}>\r\n                        <Box\r\n                            component=\"form\"\r\n                            sx={{\r\n                                '& > :not(style)': { m: 1, width: '41ch' }\r\n                            }}\r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\r\n                                Name\r\n                            </Typography>\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                label=\"Compaign Name\"\r\n                                variant=\"outlined\"\r\n                                style={{ color: 'black' }}\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                            <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\r\n                                Email Template\r\n                            </Typography>\r\n\r\n                            <div class=\"col-sm-3\">\r\n                                <select\r\n                                    type=\"text\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Select Email Template\"\r\n                                    id=\"firstName\"\r\n                                    onBlur={(e) => setEmailTemplate(e.target.value)}\r\n                                >\r\n                                    <option value=\"\" disabled selected>\r\n                                        Select Email Template\r\n                                    </option>\r\n                                    {templates?.map((e, i) => (\r\n                                        <option key={i} value={e.name}>\r\n                                            {e.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\r\n                                Landing Page\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <select\r\n                                    type=\"text\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Select Landing Page\"\r\n                                    id=\"firstName\"\r\n                                    onBlur={(e) => setLPage(e.target.value)}\r\n                                >\r\n                                    <option value=\"\" disabled selected>\r\n                                        Select Landing Page\r\n                                    </option>\r\n                                    {pages?.map((e, i) => (\r\n                                        <option key={i} value={e.name}>\r\n                                            {e.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\r\n                                URL\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"http://192.168.1.1\"\r\n                                    id=\"ip\"\r\n                                    required\r\n                                    value={url}\r\n                                    onChange={(e) => setURL(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\r\n                                Launch Date\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"datetime-local\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Select Launch Date\"\r\n                                    id=\"ip\"\r\n                                    required\r\n                                    value={lDate}\r\n                                    onChange={(e) => setLDate(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\r\n                                Send Emails By (Optional)\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"datetime-local\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Select Launch Date\"\r\n                                    id=\"ip\"\r\n                                    value={sendEmails}\r\n                                    onChange={(e) => setSendEmails(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\r\n                                Sending Profile\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <select\r\n                                    type=\"text\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Select Landing Page\"\r\n                                    id=\"firstName\"\r\n                                    onBlur={(e) => setSendProfile(e.target.value)}\r\n                                >\r\n                                    <option value=\"\" disabled selected>\r\n                                        Select Sending Profile\r\n                                    </option>\r\n                                    {sendingProfile?.map((e, i) => (\r\n                                        <option key={i} value={e.name}>\r\n                                            {e.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            {/* <Button variant=\"contained\" color=\"error\" onClick={() => setTestEmailopen(true)}>\r\n                                Send Test Email{' '}\r\n                            </Button> */}\r\n                            <Modal\r\n                                open={testEmailopen}\r\n                                onClose={() => setTestEmailopen(false)}\r\n                                aria-labelledby=\"modal-modal-title\"\r\n                                aria-describedby=\"modal-modal-description\"\r\n                            >\r\n                                <Box sx={newstyle}>\r\n                                    <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                        Send Test Email\r\n                                    </Typography>\r\n                                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                                        Send Test Email to:\r\n                                        <div className=\"container my-2\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-3\">\r\n                                                    <input\r\n                                                        placeholder=\"First Name\"\r\n                                                        className=\"form-control\"\r\n                                                        onChange={(e) => setFname(e.target.value)}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-md-3\">\r\n                                                    <input\r\n                                                        placeholder=\"Last Name\"\r\n                                                        className=\"form-control\"\r\n                                                        onChange={(e) => setLname(e.target.value)}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-md-3\">\r\n                                                    <input\r\n                                                        placeholder=\"Email\"\r\n                                                        className=\"form-control\"\r\n                                                        onChange={(e) => setEmail(e.target.value)}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-md-3\">\r\n                                                    <input\r\n                                                        placeholder=\"Position\"\r\n                                                        className=\"form-control\"\r\n                                                        onChange={(e) => setPosition(e.target.value)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <Button variant=\"contained\" className=\"mt-2\">\r\n                                                Send\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Modal>\r\n                            <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\r\n                                Groups\r\n                            </Typography>\r\n                            <div class=\"col-sm-3\">\r\n                                <select\r\n                                    type=\"text\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Select Landing Page\"\r\n                                    id=\"firstName\"\r\n                                    onBlur={(e) => setGroup(e.target.value)}\r\n                                >\r\n                                    <option value=\"\" disabled selected>\r\n                                        Select Group\r\n                                    </option>\r\n                                    {groups?.map((e, i) => (\r\n                                        <option key={i} value={e.name}>\r\n                                            {e.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            {/* <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Position\"\r\n                                    id=\"position\"\r\n                                    value={position}\r\n                                    onChange={(e) => setPosition(e.target.value)}\r\n                                />\r\n                            </div> */}\r\n                            {/* <Button variant=\"text\" color=\"error\" size=\"small\" onClick={handleSubmit}>\r\n                                <AddIcon fontSize=\"small\" /> Add\r\n                            </Button> */}\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                style={{\r\n                                    backgroundColor: '#70d8bd'\r\n                                    // color: \"black\"\r\n                                }}\r\n                                onClick={handleAdd}\r\n                                fullWidth\r\n                            >\r\n                                Create Template\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Modal>\r\n\r\n                <Typography variant=\"h2\" style={{ color: 'black' }} gutterBottom>\r\n                    Details\r\n                </Typography>\r\n\r\n                <table className=\"table table-hover mt-4\">\r\n                    <thead class=\"thead-dark\">\r\n                        <tr>\r\n                            <td>First Name</td>\r\n                            <td>Last Name</td>\r\n                            <td>Email</td>\r\n                            <td>Position</td>\r\n                            <td>Status</td>\r\n                            <td>Reported</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {result?.results?.map((e, i) => {\r\n                            return (\r\n                                <>\r\n                                    <tr key={i} onClick={() => handleNewModal(i)} style={{ cursor: 'pointer' }}>\r\n                                        <td>{e.first_name}</td>\r\n                                        <td>{e.last_name}</td>\r\n                                        <td>{e.email}</td>\r\n                                        <td>{e.position}</td>\r\n                                        <td>{e.status}</td>\r\n                                        <td>{e.reported === false ? <Tag color=\"volcano\">False</Tag> : <Tag color=\"lime\">True</Tag>}</td>\r\n                                    </tr>\r\n                                    <Modal\r\n                                        open={newModal}\r\n                                        onClose={() => {\r\n                                            setNewModal(false);\r\n                                        }}\r\n                                        aria-labelledby=\"modal-modal-title\"\r\n                                        aria-describedby=\"modal-modal-description\"\r\n                                    >\r\n                                        <Box sx={style}>\r\n                                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                                Timeline for {eve.first_name} {eve.last_name}\r\n                                            </Typography>\r\n                                            <Typography id=\"modal-modal-description\" sx={{ mt: 2 }} className=\"my-2\">\r\n                                                Email: {eve?.email && eve?.email}\r\n                                                <br />\r\n                                                Result ID: {eve.id}\r\n                                            </Typography>\r\n                                            {result?.timeline[0].message === 'Campaign Created' ? (\r\n                                                <>\r\n                                                    <CheckCircleIcon color=\"success\" size=\"large\" />\r\n                                                    {result?.timeline[0].message}\r\n                                                    <br />\r\n                                                    <br />\r\n                                                    Time : {new Date(result?.timeline[0].time).toLocaleString()}\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <CheckCircleIcon color=\"success\" size=\"large\" /> {result?.timeline[0].message}\r\n                                                    <br />\r\n                                                    <br />\r\n                                                    Time : {new Date(result?.timeline[0].time).toLocaleString()}\r\n                                                </>\r\n                                            )}\r\n                                            {eve?.status === 'Scheduled' ? (\r\n                                                <p> Send Date : {new Date(eve?.send_date).toLocaleString()}</p>\r\n                                            ) : (\r\n                                                // e?.status === 'Error' && (\r\n                                                <p>\r\n                                                    {eve?.status === 'Error' && <CancelIcon color=\"error\" size=\"large\" />}\r\n                                                    <br />\r\n                                                    <h5> Raw Data About Events </h5>\r\n                                                    {findLastOccurrence(result?.timeline, eve?.email)?.details.length > 0\r\n                                                        ? findLastOccurrence(result?.timeline, eve?.email)?.details\r\n                                                        : 'No Events Occur'}\r\n                                                    <br />\r\n                                                    <br />\r\n                                                    {/* <p>{findLastOccurrence(result?.timeline, eve?.email)??.details}</p> */}\r\n                                                    {findLastOccurrence(result?.timeline, eve?.email)?.details && (\r\n                                                        <table className=\"table text-white\">\r\n                                                            <tr>\r\n                                                                <th>RID </th>\r\n                                                                <th>Address </th>\r\n                                                                <th>User Agent </th>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td className=\"px-2\">\r\n                                                                    {\r\n                                                                        JSON.parse(\r\n                                                                            findLastOccurrence(result?.timeline, eve?.email)?.details\r\n                                                                        )?.payload?.rid\r\n                                                                    }{' '}\r\n                                                                    <br />\r\n                                                                </td>\r\n\r\n                                                                <td className=\"px-2\">\r\n                                                                    {\r\n                                                                        JSON.parse(\r\n                                                                            findLastOccurrence(result?.timeline, eve?.email)?.details\r\n                                                                        )?.browser?.address\r\n                                                                    }{' '}\r\n                                                                    <br />\r\n                                                                </td>\r\n                                                                <td className=\"px-2\">\r\n                                                                    {\r\n                                                                        JSON.parse(\r\n                                                                            findLastOccurrence(result?.timeline, eve?.email)?.details\r\n                                                                        )?.browser?.['user-agent']\r\n                                                                    }{' '}\r\n                                                                    <br />\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </table>\r\n                                                    )}\r\n                                                    Recent Action Time :{' '}\r\n                                                    {new Date(findLastOccurrence(result?.timeline, eve?.email)?.time).toLocaleString()}\r\n                                                </p>\r\n                                                // )\r\n                                            )}\r\n                                        </Box>\r\n                                    </Modal>\r\n                                </>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </MainCard>\r\n        </>\r\n    );\r\n}\r\n"],"sourceRoot":""}