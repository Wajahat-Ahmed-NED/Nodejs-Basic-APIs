{"version":3,"sources":["pages/extra-pages/UsersAndGroups.js"],"names":["style","position","top","left","transform","width","maxHeight","bgcolor","color","boxShadow","p","overflowX","overflowY","UsersAndGroups","React","useState","open","setOpen","editModal","setEditModal","id","setId","name","setName","todos","setTodos","fname","setFname","lname","setLname","email","setEmail","setPosition","data","setData","groupSummary","setGroupSummary","excelFile","setExcelFile","excelFileError","setExcelFileError","excelData","setExcelData","fileType","handleFile","e","selectedFile","target","files","console","log","includes","type","reader","FileReader","readAsArrayBuffer","onload","result","handleExcelSubmit","preventDefault","workbook","XLSX","worksheetName","SheetNames","worksheet","Sheets","sheet_to_json","handleClose","handleCheckClose","handleSubmit","todo","first_name","last_name","handleDelete","i","filter","index","fetchUser","getGroups","then","res","catch","err","getGroupsSummary","useEffect","title","sx","maxWidth","className","variant","gutterBottom","component","total","onClick","onClose","m","noValidate","autoComplete","htmlFor","onChange","required","marginTop","fontSize","label","size","value","class","placeholder","map","fontWeight","backgroundColor","length","Swal","fire","obj","targets","createGroup","icon","text","showConfirmButton","timer","response","message","fullWidth","Date","modified_date","toUTCString","handleEditModal","deleteGroup","handleDeleteGroup","editGroup"],"mappings":"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","file":"static/js/22.b9893c9c.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Typography, Button, Modal, Box, TextField, Card, CardContent, CardActions, IconButton } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n// project import\r\nimport MainCard from 'components/MainCard';\r\nimport { createGroup, deleteGroup, editGroup, getGroups, getGroupsSummary } from 'api/api';\r\nimport Swal from 'sweetalert2';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '33%',\r\n    maxHeight: '500px',\r\n    bgcolor: 'rgb(36, 41, 57)',\r\n    color: 'white !important',\r\n\r\n    boxShadow: 24,\r\n    p: 4,\r\n    overflowX: 'hidden',\r\n    overflowY: 'auto'\r\n    // minHeight: \"400px\",\r\n    // maxHeight: \"600px\",\r\n};\r\nexport default function UsersAndGroups() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [editModal, setEditModal] = React.useState(false);\r\n    const [id, setId] = React.useState('');\r\n    const [name, setName] = React.useState('');\r\n    const [todos, setTodos] = useState([]);\r\n    const [fname, setFname] = useState('');\r\n    const [lname, setLname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [position, setPosition] = useState('');\r\n    const [data, setData] = React.useState([]);\r\n    const [groupSummary, setGroupSummary] = React.useState([]);\r\n    const [excelFile, setExcelFile] = useState(null);\r\n    const [excelFileError, setExcelFileError] = useState(null);\r\n\r\n    // submit\r\n    const [excelData, setExcelData] = useState(null);\r\n    // it will contain array of objects\r\n\r\n    // handle File\r\n    const fileType = ['text/csv', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\r\n    const handleFile = (e) => {\r\n        setExcelData(null);\r\n        let selectedFile = e.target.files[0];\r\n        console.log(selectedFile);\r\n        if (selectedFile) {\r\n            // console.log(selectedFile.type);\r\n            if (selectedFile && fileType.includes(selectedFile.type)) {\r\n                let reader = new FileReader();\r\n                reader.readAsArrayBuffer(selectedFile);\r\n                reader.onload = (e) => {\r\n                    setExcelFileError(null);\r\n                    setExcelFile(e.target.result);\r\n                };\r\n            } else {\r\n                setExcelFileError('Please select only csv/excel file types');\r\n                setExcelFile(null);\r\n            }\r\n        } else {\r\n            console.log('plz select your file');\r\n        }\r\n    };\r\n\r\n    // submit function\r\n    const handleExcelSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (excelFile !== null) {\r\n            const workbook = XLSX.read(excelFile, { type: 'buffer' });\r\n            const worksheetName = workbook.SheetNames[0];\r\n            const worksheet = workbook.Sheets[worksheetName];\r\n            const data = XLSX.utils.sheet_to_json(worksheet);\r\n            console.log(data);\r\n            setExcelData(data);\r\n        } else {\r\n            setExcelData(null);\r\n        }\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setEditModal(false);\r\n        setTodos([]);\r\n        setExcelData(null);\r\n        setName('');\r\n    };\r\n    const handleCheckClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleAdd = () => {\r\n        setOpen(false);\r\n        if (name === '' || (todos.length < 1 && excelData === null)) {\r\n            Swal.fire('Invalid Data', 'Fill all fields!', 'error');\r\n            setOpen(true);\r\n        } else {\r\n            let obj = {\r\n                name: name,\r\n                targets: [...todos, ...(excelData || [])]\r\n            };\r\n            console.log(obj);\r\n            createGroup(obj)\r\n                .then((res) => {\r\n                    console.log(res);\r\n\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Success!',\r\n                        text: 'Group created successfully!',\r\n                        showConfirmButton: true,\r\n                        timer: 2000\r\n                    });\r\n                    fetchUser();\r\n                    handleClose();\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    handleCheckClose();\r\n                    Swal.fire('Failed', err.response.data.message, 'error');\r\n                });\r\n        }\r\n    };\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (fname !== '' || lname !== '' || email !== '' || position !== '') {\r\n            let todo = { first_name: fname, last_name: lname, email: email, position: position };\r\n\r\n            setTodos([...todos, todo]);\r\n            setFname('');\r\n            setLname('');\r\n            setEmail('');\r\n            setPosition('');\r\n        }\r\n    }\r\n    function handleDelete(i) {\r\n        setTodos(todos.filter((todo, index) => index !== i));\r\n    }\r\n    const fetchUser = () => {\r\n        getGroups()\r\n            .then((res) => {\r\n                console.log(res);\r\n                setData(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n        getGroupsSummary()\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setGroupSummary(res.data);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n    const handleDeleteGroup = (i) => {\r\n        deleteGroup(i)\r\n            .then((res) => {\r\n                console.log(res);\r\n\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Success!',\r\n                    text: 'Group deleted successfully!',\r\n                    showConfirmButton: true,\r\n                    timer: 2000\r\n                });\r\n                fetchUser();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                Swal.fire('Failed', err.response.data.message, 'error');\r\n            });\r\n    };\r\n\r\n    const handleEditModal = (e) => {\r\n        setEditModal(true);\r\n        setName(e?.name);\r\n        setTodos(e?.targets);\r\n        setId(e?.id);\r\n        // setEditData(e);\r\n    };\r\n\r\n    const handleEdit = () => {\r\n        setEditModal(false);\r\n        if (name === '' || (todos.length < 1 && excelData === null)) {\r\n            Swal.fire('Invalid Data', 'Fill all fields!', 'error');\r\n            setOpen(true);\r\n        } else {\r\n            let obj = {\r\n                id: id,\r\n                name: name,\r\n                targets: [...todos, ...(excelData || [])]\r\n                // ...editData\r\n            };\r\n            console.log(obj);\r\n            // console.log(typeof id);\r\n            editGroup(obj, id)\r\n                .then((res) => {\r\n                    console.log(res);\r\n\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Success!',\r\n                        text: 'Group Updated Successfully!',\r\n                        showConfirmButton: true,\r\n                        timer: 2000\r\n                    });\r\n                    fetchUser();\r\n                    handleClose();\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    handleCheckClose();\r\n                    Swal.fire('Failed', err.response.data.message, 'error');\r\n                });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUser();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <MainCard title=\"Users And Groups\">\r\n                <Card sx={{ maxWidth: 275 }} className=\"mb-3\" style={{ color: 'black' }}>\r\n                    <CardContent>\r\n                        <Typography variant=\"h4\" style={{ color: 'black' }} gutterBottom>\r\n                            Groups Summary\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"div\" color=\"text.secondary\">\r\n                            Total Groups : {groupSummary?.total}\r\n                        </Typography>\r\n                        {/* <Typography sx={{ mb: 1.5 }} color=\"text.secondary.dark\">\r\n                            adjective\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                            well meaning and kindly.\r\n                            <br />\r\n                            {'\"a benevolent smile\"'}\r\n                        </Typography> */}\r\n                    </CardContent>\r\n                </Card>\r\n                <Button variant=\"contained\" className=\"mb-3\" onClick={handleOpen}>\r\n                    New Group\r\n                </Button>\r\n\r\n                <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\r\n                    <Box sx={style}>\r\n                        <Box\r\n                            component=\"form\"\r\n                            sx={{\r\n                                '& > :not(style)': { m: 1, width: '41ch' }\r\n                            }}\r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                Name\r\n                            </Typography>\r\n\r\n                            <div className=\"container\">\r\n                                {/* upload file section */}\r\n                                <div className=\"form\">\r\n                                    <form className=\"form-group\" autoComplete=\"off\">\r\n                                        <label htmlFor=\"bulk\">\r\n                                            <h5>Bulk Import</h5>\r\n                                        </label>\r\n                                        <br></br>\r\n                                        <input type=\"file\" className=\"form-control\" onChange={handleFile} required></input>\r\n                                        {excelFileError && (\r\n                                            <div className=\"text-danger\" style={{ marginTop: 5 + 'px' }}>\r\n                                                {excelFileError}\r\n                                            </div>\r\n                                        )}\r\n                                        <Button\r\n                                            onClick={(e) => {\r\n                                                excelFile && handleExcelSubmit(e);\r\n                                            }}\r\n                                            fontSize=\"small\"\r\n                                            color=\"success\"\r\n                                            style={{ marginTop: 5 + 'px' }}\r\n                                        >\r\n                                            {excelData ? 'Uploaded' : 'Upload'}\r\n                                        </Button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                label=\"Group Name\"\r\n                                variant=\"outlined\"\r\n                                style={{ color: 'black' }}\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                Users\r\n                            </Typography>\r\n\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"First Name\"\r\n                                    id=\"firstName\"\r\n                                    value={fname}\r\n                                    onChange={(e) => setFname(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Last Name\"\r\n                                    id=\"lastName\"\r\n                                    value={lname}\r\n                                    onChange={(e) => setLname(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Email\"\r\n                                    id=\"email\"\r\n                                    required\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Position\"\r\n                                    id=\"position\"\r\n                                    value={position}\r\n                                    onChange={(e) => setPosition(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Button variant=\"text\" color=\"error\" size=\"small\" onClick={handleSubmit}>\r\n                                <AddIcon fontSize=\"small\" /> Add\r\n                            </Button>\r\n\r\n                            {todos?.map((e, index) => (\r\n                                <div class=\"accordion accordion-flush border rounded\" key={index} id=\"accordionFlushExample\">\r\n                                    <div class=\"accordion-item\">\r\n                                        <h2 class=\"accordion-header\" id=\"flush-headingOne\">\r\n                                            <button\r\n                                                class=\"accordion-button collapsed\"\r\n                                                type=\"button\"\r\n                                                data-bs-toggle=\"collapse\"\r\n                                                data-bs-target={`#flush-collapse${index}`}\r\n                                                aria-expanded=\"false\"\r\n                                                aria-controls={`flush-collapse${index}`}\r\n                                            >\r\n                                                <div className=\"d-flex justify-content-between \" style={{ width: '100%' }}>\r\n                                                    <>\r\n                                                        <span className=\"mt-3\">{index + 1}</span>\r\n                                                        <p style={{ fontWeight: 'bold' }} className=\"mt-3\">\r\n                                                            {e.first_name + ' ' + e.last_name}\r\n                                                        </p>\r\n                                                        {/* <p className=\"mt-3\">{}</p> */}\r\n                                                    </>\r\n                                                    {/* <p className=\"mt-3\">{e.cvss || e.cvss_score}</p> */}\r\n                                                    <Button\r\n                                                        variant=\"text\"\r\n                                                        color=\"error\"\r\n                                                        className=\"m-2\"\r\n                                                        onClick={() => handleDelete(index)}\r\n                                                    >\r\n                                                        Delete\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </button>\r\n                                        </h2>\r\n                                        <div\r\n                                            id={`flush-collapse${index}`}\r\n                                            class=\"accordion-collapse collapse\"\r\n                                            aria-labelledby=\"flush-headingOne\"\r\n                                            data-bs-parent=\"#accordionFlushExample\"\r\n                                        >\r\n                                            <div class=\"accordion-body\">{e.email + ' ' + e.position}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                // <li key={index}>\r\n                                //     {fname} {lname} {email} {position}\r\n\r\n                                //     <button onClick={() => handleDelete(index)}>Delete</button>\r\n                                // </li>\r\n                            ))}\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                style={{\r\n                                    backgroundColor: '#70d8bd'\r\n                                    // color: \"black\"\r\n                                }}\r\n                                onClick={handleAdd}\r\n                                fullWidth\r\n                            >\r\n                                Create Group\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Modal>\r\n\r\n                <table className=\"table table-hover mt-4\">\r\n                    <thead class=\"thead-dark\">\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td># of Members</td>\r\n                            <td>Modified Date</td>\r\n                            <td>Actions</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data?.map((e, i) => {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>{e.name}</td>\r\n                                    <td>{e.targets.length}</td>\r\n                                    <td>{new Date(e.modified_date).toUTCString()}</td>\r\n                                    <td>\r\n                                        <IconButton onClick={() => handleEditModal(e)}>\r\n                                            <EditIcon color=\"success\" />\r\n                                            {/* <DeleteIcon color=\"error\" /> */}\r\n                                        </IconButton>\r\n                                        <IconButton onClick={() => handleDeleteGroup(e?.id)}>\r\n                                            {/* <EditIcon color=\"success\" /> */}\r\n                                            <DeleteIcon color=\"error\" />\r\n                                            {/* <DeleteIcon color=\"error\" /> */}\r\n                                        </IconButton>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <Modal\r\n                    open={editModal}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"modal-modal-title\"\r\n                    aria-describedby=\"modal-modal-description\"\r\n                >\r\n                    <Box sx={style}>\r\n                        <Box\r\n                            component=\"form\"\r\n                            sx={{\r\n                                '& > :not(style)': { m: 1, width: '41ch' }\r\n                            }}\r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                Name\r\n                            </Typography>\r\n\r\n                            <TextField\r\n                                id=\"outlined-basic\"\r\n                                label=\"Group Name\"\r\n                                variant=\"outlined\"\r\n                                style={{ color: 'black' }}\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n\r\n                            <div className=\"container\">\r\n                                {/* upload file section */}\r\n                                <div className=\"form\">\r\n                                    <form className=\"form-group\" autoComplete=\"off\">\r\n                                        <label htmlFor=\"bulk\">\r\n                                            <h5>Bulk Import</h5>\r\n                                        </label>\r\n                                        <br></br>\r\n                                        <input type=\"file\" className=\"form-control\" onChange={handleFile} required></input>\r\n                                        {excelFileError && (\r\n                                            <div className=\"text-danger\" style={{ marginTop: 5 + 'px' }}>\r\n                                                {excelFileError}\r\n                                            </div>\r\n                                        )}\r\n                                        <Button\r\n                                            onClick={(e) => {\r\n                                                excelFile && handleExcelSubmit(e);\r\n                                            }}\r\n                                            fontSize=\"small\"\r\n                                            color=\"success\"\r\n                                            style={{ marginTop: 5 + 'px' }}\r\n                                        >\r\n                                            {excelData ? 'Uploaded' : 'Upload'}\r\n                                        </Button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\r\n                                Users\r\n                            </Typography>\r\n\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"First Name\"\r\n                                    id=\"firstName\"\r\n                                    value={fname}\r\n                                    onChange={(e) => setFname(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Last Name\"\r\n                                    id=\"lastName\"\r\n                                    value={lname}\r\n                                    onChange={(e) => setLname(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Email\"\r\n                                    id=\"email\"\r\n                                    required\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    class=\"form-control\"\r\n                                    placeholder=\"Position\"\r\n                                    id=\"position\"\r\n                                    value={position}\r\n                                    onChange={(e) => setPosition(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <Button variant=\"text\" color=\"error\" size=\"small\" onClick={handleSubmit}>\r\n                                <AddIcon fontSize=\"small\" /> Add\r\n                            </Button>\r\n\r\n                            {todos.map((e, index) => (\r\n                                <div class=\"accordion accordion-flush border rounded\" key={index} id=\"accordionFlushExample\">\r\n                                    <div class=\"accordion-item\">\r\n                                        <h2 class=\"accordion-header\" id=\"flush-headingOne\">\r\n                                            <button\r\n                                                class=\"accordion-button collapsed\"\r\n                                                type=\"button\"\r\n                                                data-bs-toggle=\"collapse\"\r\n                                                data-bs-target={`#flush-collapse${index}`}\r\n                                                aria-expanded=\"false\"\r\n                                                aria-controls={`flush-collapse${index}`}\r\n                                            >\r\n                                                <div className=\"d-flex justify-content-between \" style={{ width: '100%' }}>\r\n                                                    <>\r\n                                                        <span className=\"mt-3\">{index + 1}</span>\r\n                                                        <p style={{ fontWeight: 'bold' }} className=\"mt-3\">\r\n                                                            {e.first_name + ' ' + e.last_name}\r\n                                                        </p>\r\n                                                        {/* <p className=\"mt-3\">{}</p> */}\r\n                                                    </>\r\n                                                    {/* <p className=\"mt-3\">{e.cvss || e.cvss_score}</p> */}\r\n                                                    <Button\r\n                                                        variant=\"text\"\r\n                                                        color=\"error\"\r\n                                                        className=\"m-2\"\r\n                                                        onClick={() => handleDelete(index)}\r\n                                                    >\r\n                                                        Delete\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </button>\r\n                                        </h2>\r\n                                        <div\r\n                                            id={`flush-collapse${index}`}\r\n                                            class=\"accordion-collapse collapse\"\r\n                                            aria-labelledby=\"flush-headingOne\"\r\n                                            data-bs-parent=\"#accordionFlushExample\"\r\n                                        >\r\n                                            <div class=\"accordion-body\">{e.email + ' ' + e.position}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                // <li key={index}>\r\n                                //     {fname} {lname} {email} {position}\r\n\r\n                                //     <button onClick={() => handleDelete(index)}>Delete</button>\r\n                                // </li>\r\n                            ))}\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                style={{\r\n                                    backgroundColor: '#70d8bd'\r\n                                    // color: \"black\"\r\n                                }}\r\n                                onClick={handleEdit}\r\n                                fullWidth\r\n                            >\r\n                                Edit Group\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Modal>\r\n            </MainCard>\r\n        </>\r\n    );\r\n}\r\n"],"sourceRoot":""}